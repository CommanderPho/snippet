name: Build, Lint, Test and Deploy

on:
  push:
    branches:
      - "*"
  release:
    types:
      - published

jobs:
  build-lint-test:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node:
          - 14
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Install Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Install Dependencies
        run: yarn
      - name: Run Linter
        run: yarn lint
      - name: Build Code
        run: yarn compile
      - name: Run Unit Tests
        run: yarn test
      - name: Generate Coverage Report
        run: yarn coverage
      - name: Upload Coverage Report
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          flag-name: Test on ${{ matrix.os }}

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build-lint-test
    steps:
      - name: Let Coveralls know that all tests have finished
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  # publish:
  #   name: Publish Github Action
  #   needs:
  #     - build-lint-test
  #     - coverage
  #   if: github.event_name == 'release'
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   steps:
  #     - name: Checkout Source
  #       uses: actions/checkout@v2
  #     - name: Update Major Tag
  #       run: |
  #         MAJOR_VERSION=$(git describe --tags | grep -o "v[0-9]*")
  #         git config --global user.name 'HaaLeo'
  #         git config --global user.email '23164374+HaaLeo@users.noreply.github.com'
  #         git tag -afm "Updated tag $MAJOR_VERSION to $(git describe --tags)" $MAJOR_VERSION
  #         git push --tags --force
